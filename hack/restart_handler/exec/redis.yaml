apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  serviceName: redis-headless  
  replicas: 3             # Number of Redis replicas (for high availability)
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:7.0-alpine  # Use a stable Redis image
          ports:
            - containerPort: 6379
              name: redis
          resources:     # Set resource requests/limits based on your workload
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "200m" 
          # Add liveness and readiness probes (important for production)
          livenessProbe:
            exec:
              command: ["redis-cli", "ping"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command: ["redis-cli", "ping"]
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: redis-headless
spec:
  clusterIP: None  # This is what makes it headless
  selector:
    app: redis      # Match the Redis StatefulSet pods
  ports:
    - name: redis
      port: 6379
      targetPort: 6379 