apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
data:
  master.conf: |
    bind 0.0.0.0
    protected-mode no
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    daemonize no
    supervised no
    pidfile /var/run/redis_6379.pid
    loglevel notice
    logfile ""
    maxclients 15000
  slave.conf: |
    slaveof redis-0.redis-headless 6379
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
spec:
  serviceName: redis-headless  
  replicas: 3             # Number of Redis replicas (for high availability)
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      volumes:
        - name: conf
          emptyDir: {}
        - name: redis-config
          configMap:
            name: redis-config  # Use master config for the first pod (index 0)
            items:
            - key: master.conf
              path: master.conf
            - key: slave.conf
              path: slave.conf
      initContainers:
      - name: init-redis
        image: redis:7.0
        command:
        - bash
        - "-c"
        - |
          set -ex
          export ordinal=$(echo `hostname` | grep -o '[0-9]\+')
          # Copy appropriate conf.d files from redis-config to emptyDir.
          if [[ $ordinal -eq 0 ]]; then
            cp /mnt/redis-config/master.conf /etc/redis.conf
          else
            cp /mnt/redis-config/slave.conf /etc/redis.conf
          fi
        volumeMounts:
        - name: conf
          mountPath: /etc
          subPath: redis.conf
        - name: redis-config
          mountPath: /mnt/redis-config
      containers:
        - name: redis
          image: redis:7.0-alpine  # Use a stable Redis image
          command: ["redis-server"]
          args: ["/etc/redis.conf"]
          env:
          - name: ALLOW_EMPTY_PASSWORD
            value: "yes"
          ports:
          - containerPort: 6379
            name: redis
          resources:     # Set resource requests/limits based on your workload
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "200m" 
          volumeMounts:
          - name: conf
            mountPath: /etc
            subPath: redis.conf
          - name: redis-config
            mountPath: /mnt/redis-config
          # Add liveness and readiness probes (important for production)
          livenessProbe:
            exec:
              command: ["redis-cli", "ping"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command: ["redis-cli", "ping"]
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5         
---
apiVersion: v1
kind: Service
metadata:
  name: redis-headless
spec:
  clusterIP: None  # This is what makes it headless
  selector:
    app: redis      # Match the Redis StatefulSet pods
    statefulset.kubernetes.io/pod-name: redis-0
  ports:
    - name: redis
      port: 6379
      targetPort: 6379 